spring.application.name=weatherwear
server.port=8080

# PostgreSQL Database Configuration
# Use host.docker.internal for Docker-to-host DB connection on Windows/Mac
spring.datasource.url=jdbc:postgresql://host.docker.internal:5432/weatherweardb
spring.datasource.username=postgres
spring.datasource.password=2000
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Spring Security (disable default login for development)
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

# SQL Initialization
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Logging
logging.level.org.springframework.web=DEBUG

# CORS Configuration (adjust frontend port if needed)
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS

# OpenWeatherMap API Key (replace with your actual key)
weather.api.key=536ba97d9bcb433650e85dd060ceab9f